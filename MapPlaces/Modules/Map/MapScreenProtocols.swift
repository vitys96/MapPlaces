//
//  MapScreenProtocols.swift
//  MapPlaces
//
//  Created TOOK on 27.12.2019.
//  Copyright Â© 2019 TOOK. All rights reserved.
//
//  Template generated by Sakhabaev Egor @Banck
//  https://github.com/Banck/Swift-viper-template-for-xcode
//

import MapKit

//MARK: Wireframe -
enum MapScreenNavigationOption {
    //    case firstModule
    //    case secondModule(someData)
}

protocol MapScreenWireframeInterface: class {
    func navigate(to option: MapScreenNavigationOption)
}

//MARK: Presenter -
protocol MapScreenPresenterInterface: class {

    var interactor: MapScreenInteractorInput? { get set }
    func mappingValues(items: [MKMapItem])
    
    // MARK: - Lifecycle -
    func viewDidLoad()
    func viewWillAppear()
    func viewDidAppear()
    func viewWillDisappear()
    func viewDidDisappear()

}
extension MapScreenPresenterInterface {
    func viewDidLoad() {/*leaves this empty*/}
    func viewWillAppear() {/*leaves this empty*/}
    func viewDidAppear() {/*leaves this empty*/}
    func viewWillDisappear() {/*leaves this empty*/}
    func viewDidDisappear() {/*leaves this empty*/}
}


//MARK: Interactor -
protocol MapScreenInteractorOutput: class {
    /* Interactor -> Presenter */
}

protocol MapScreenInteractorInput: class {

    var presenter: MapScreenInteractorOutput?  { get set }

    /* Presenter -> Interactor */
}

//MARK: View -
protocol MapScreenView: class {

    var presenter: MapScreenPresenterInterface?  { get set }
    func displayCollectionData(data: [PlacesCell.Data])
    /* Presenter -> ViewController */
}
